FROM quay.io/pypa/manylinux2010_x86_64

###############
# Build tools #
###############

# setup
RUN set -ex \
    && yum install wget -y \
    && mkdir /build-tools

# pkg-config
RUN set -ex \
    && cd /build-tools \
    && PKG_CONFIG_VERSION="0.29.2" \
    && wget https://pkg-config.freedesktop.org/releases/pkg-config-${PKG_CONFIG_VERSION}.tar.gz \
    && tar xvf pkg-config-${PKG_CONFIG_VERSION}.tar.gz \
    && cd pkg-config-${PKG_CONFIG_VERSION} \
    && ./configure --with-internal-glib \
    && make -j4 \
    && make install \
    && pkg-config --version

# cmake
RUN set -ex \
    && cd /build-tools \
    && CMAKE_VERSION="3.13.4" \
    && wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz \
    && tar xvf cmake-${CMAKE_VERSION}.tar.gz \
    && cd cmake-${CMAKE_VERSION} \
    && ./configure \
    && gmake -j4 \
    && make install \
    && cmake --version

# autoconf
RUN set -ex \
    && cd /build-tools \
    && AUTOCONF_VERSION="2.69" \
    && wget https://ftp.gnu.org/gnu/autoconf/autoconf-${AUTOCONF_VERSION}.tar.gz \
    && tar xvf autoconf-${AUTOCONF_VERSION}.tar.gz \
    && cd autoconf-${AUTOCONF_VERSION} \
    && ./configure \
    && make -j4 \
    && make install \
    && autoconf --version

# automake
RUN set -ex \
    && cd /build-tools \
    && AUTOMAKE_VERSION="1.16.1" \
    && wget https://ftp.gnu.org/gnu/automake/automake-${AUTOMAKE_VERSION}.tar.gz \
    && tar xvf automake-${AUTOMAKE_VERSION}.tar.gz \
    && cd automake-${AUTOMAKE_VERSION} \
    && ./configure \
    && make -j4 \
    && make install \
    && automake --version

# nasm
RUN set -ex \
    && cd /build-tools \
    && NASM_VERSION="2.14.02" \
    && wget https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.gz \
    && tar xvf nasm-${NASM_VERSION}.tar.gz \
    && cd nasm-${NASM_VERSION} \
    && ./configure \
    && make -j4 \
    && make install \
    && nasm --version

# cleanup
RUN set -ex \
    && cd / \
    && rm -rf /build-tools

################
# Dependencies #
################

# setup
RUN set -ex \
    && mkdir /build-deps

# x265
RUN set -ex \
    && cd /build-deps \
    && X265_VERSION="3.0" \
    && wget https://bitbucket.org/multicoreware/x265/downloads/x265_${X265_VERSION}.tar.gz \
    && tar xvf x265_${X265_VERSION}.tar.gz \
    && cd x265_${X265_VERSION} \
    && cmake -DCMAKE_INSTALL_PREFIX=/usr -G "Unix Makefiles" ./source \
    && make -j4 \
    && make install \
    && ldconfig

# libde265
RUN set -ex \
    && cd /build-deps \
    && LIBDE265_VERSION="frame-parallel" \
    && wget https://github.com/strukturag/libde265/archive/${LIBDE265_VERSION}.zip \
    && unzip ${LIBDE265_VERSION}.zip \
    && cd libde265-${LIBDE265_VERSION} \
    && ./autogen.sh \
    && ./configure --prefix /usr \
    && make -j4 \
    && make install \
    && ldconfig

# libheif
RUN set -ex \
    && cd /build-deps \
    && LIBHEIF_VERSION="1.4.0" \
    && wget https://github.com/strukturag/libheif/releases/download/v${LIBHEIF_VERSION}/libheif-${LIBHEIF_VERSION}.tar.gz \
    && tar xvf libheif-${LIBHEIF_VERSION}.tar.gz \
    && cd libheif-${LIBHEIF_VERSION} \
    && ./configure --prefix /usr \
    && make -j4 \
    && make install \
    && ldconfig

# libffi
RUN set -ex \
    && cd /build-deps \
    && LIBFFI_VERSION="3.2.1" \
    && wget ftp://sourceware.org/pub/libffi/libffi-${LIBFFI_VERSION}.tar.gz \
    && tar xvf libffi-${LIBFFI_VERSION}.tar.gz \
    && cd libffi-${LIBFFI_VERSION} \
    && ./configure --prefix /usr \
    && make -j4 \
    && make install \
    && ldconfig

# cleanup
RUN set -ex \
    && cd / \
    && rm -rf /build-deps

##########################
# Build manylinux wheels #
##########################

# setup
RUN mkdir /wheelhouse
RUN mkdir /pyheif
COPY ./ /pyheif/

# build wheels
ARG PYPI_USERNAME
ARG PYPI_PASSWORD
RUN set -ex \
    && declare -a pythons=("34" "35" "36" "37") \
    && for PY in "${pythons[@]}"; do cd "/opt/python/cp${PY}-cp${PY}m/bin/" && ./pip install --upgrade pip auditwheel twine && ./pip wheel /pyheif -w /wheelhouse/ && ./auditwheel repair /wheelhouse/*pyheif*.whl --plat manylinux2010_x86_64 -w /wheelhouse && ./twine upload /wheelhouse/*manylinux2010*.whl -u ${PYPI_USERNAME} -p ${PYPI_PASSWORD} && rm /wheelhouse/*; done \

